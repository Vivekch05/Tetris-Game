{"version":3,"sources":["gameHelper.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledCell.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/styles/StyledFooter.js","components/Footer.js","components/styles/StyledHeader.js","components/Header.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","_ref","x","moveX","y","moveY","tetromino","length","pos","StyledTetrisWrapper","styled","div","_templateObject","_taggedTemplateLiteral","StyledTetris","_templateObject2","TETROMINOS","0","shape","color","I","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","setStage","useState","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","concat","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledCell","props","type","React","memo","index","createElement","data-testid","key","prevProps","nextProps","StyledStage","height","width","Cell","StyledDisplay","gameOver","text","label","split","str","trim","className","StyledStartButton","button","StartButton","callback","onClick","StyledFooter","footer","FooterContent","FooterText","_templateObject3","p","_templateObject4","FooterLinks","_templateObject5","FooterLink","a","_templateObject6","TechStack","_templateObject7","span","_templateObject8","Footer","title","href","target","rel","StyledHeader","header","HeaderContent","Logo","h1","GameInfo","nav","InfoItem","Header","Tetris","dropTime","setDropTime","setGameOver","isPaused","setIsPaused","highScore","setHighScore","saved","localStorage","getItem","parseInt","updatePlayerPos","playerRotate","usePlayer","setPlayer","rotate","matrix","dir","mtrx","_","column","reverse","useCallback","STAGE_WIDTH","_objectSpread","clonedPlayer","JSON","parse","stringify","offset","score","setScore","rows","setRows","level","setLevel","linePoints","clacScore","useGameStatus","setItem","toString","movePlayer","keyUp","keyCode","startGame","drop","dropPlayer","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","move","_ref2","role","tabIndex","onKeyDown","onKeyUp","Stage","Display","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.97b4c676.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () => Array(STAGE_WIDTH).fill([0, 'clear']));\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  // THIS IS SLOWER!!!\n  // return player.tetromino.some((row, y) =>\n  //   row.some((cell, x) => {\n  //     if (cell !== 0) {\n  //       return (\n  //         !stage[y + player.pos.y + moveY] ||\n  //         !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n  //         stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n  //           'clear'\n  //       );\n  //     }\n  //     return false;\n  //   })\n  // );\n\n  // Using for loops to be able to return (and break). Not possible with forEach\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1. Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2. Check that our move is inside the game areas height (y)\n          // That we're not go through bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          // 3. Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4. Check that the cell wer'e moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n  // 5. If everything above is false\n  return false;\n};","import styled from 'styled-components';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 80px 0 50px 0;\n  box-sizing: border-box;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: \n      radial-gradient(circle at 20% 20%, rgba(255, 107, 107, 0.1) 0%, transparent 50%),\n      radial-gradient(circle at 80% 80%, rgba(255, 142, 142, 0.1) 0%, transparent 50%);\n    pointer-events: none;\n  }\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 20px;\n  margin: 0 auto;\n  width: 90%;\n  max-width: 900px;\n  height: calc(100vh - 140px);\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 20px;\n  box-shadow: \n    0 8px 32px 0 rgba(31, 38, 135, 0.37),\n    inset 0 0 20px rgba(0, 0, 0, 0.2);\n  backdrop-filter: blur(8px);\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  overflow: hidden;\n  position: relative;\n  transition: all 0.3s ease;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0.05) 0%,\n      transparent 50%,\n      rgba(0, 0, 0, 0.1) 100%\n    );\n    pointer-events: none;\n  }\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 0 20px;\n    height: 100%;\n    gap: 15px;\n\n    > div {\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n    }\n  }\n\n  @media (max-width: 850px) {\n    width: 95%;\n    padding: 15px;\n    height: calc(100vh - 160px);\n    \n    aside {\n      max-width: 150px;\n      padding: 0 15px;\n      gap: 12px;\n    }\n  }\n\n  @media (max-width: 600px) {\n    padding: 12px;\n    height: calc(100vh - 150px);\n    \n    aside {\n      max-width: 120px;\n      padding: 0 10px;\n      gap: 10px;\n    }\n  }\n\n  @media (max-height: 700px) {\n    height: calc(100vh - 120px);\n    padding: 10px;\n    \n    aside {\n      gap: 8px;\n    }\n  }\n\n  /* Game board container */\n  .stage {\n    width: 100%;\n    max-width: 500px;\n    margin: 0 auto;\n    position: relative;\n    z-index: 1;\n  }\n\n  /* Hover effect */\n  &:hover {\n    box-shadow: \n      0 12px 40px 0 rgba(31, 38, 135, 0.45),\n      inset 0 0 20px rgba(0, 0, 0, 0.2);\n    transform: translateY(-2px);\n  }\n`;\n","export const TETROMINOS={\n\n    0:{shape:[[0]],color:'0,0,0'},\n    I:{\n        shape:[\n            [0,'I',0,0],\n            [0,'I',0,0],\n            [0,'I',0,0],\n            [0,'I',0,0]\n        ],\n        color:'80,227,230',\n    },\n\n    // J:{\n    //     shape:[\n    //         [0,'J',0],\n    //         [0,'J',0],\n    //         ['J','J',0]\n    //     ],\n    //     color:'36,95,223',\n    // },\n\n    // L:{\n    //     shape:[\n    //         [0,'L',0],\n    //         [0,'L',0],\n    //         [0,'L',0],\n    //         [0,'L','L']\n    //     ],\n    //     color:'223,173,36',\n    // },\n\n    O:{\n        shape:[\n            ['O','O'],\n            ['O','O']\n        ],\n        color:'223,217,36',\n    },\n\n    \n    S:{\n        shape:[\n            [0,'S','S'],\n            ['S','S',0],\n            [0, 0, 0]\n        ],\n        color:'48,211,56',\n    },\n\n    \nT:{\n        shape:[\n            ['T','T','T'],\n            [0,'T',0]\n        ],\n        color:'132,61,198',\n    },\n\n    \n    Z:{\n        shape:[\n            ['Z','Z',0],\n            [0,'Z','Z'],\n            [0, 0, 0]\n        ],\n        color:'227,78,78',\n    },\n}\n\nexport const randomTetromino = () =>{\n    const tetrominos = 'IOSTZ';\n    const randTetromino =\n    tetrominos[Math.floor(Math.random()*tetrominos.length)];\n    return TETROMINOS[randTetromino];\n}","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelper';\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n    const sweepRows = newStage =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, []);\n\n    const updateStage = prevStage => {\n      // First flush the stage\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n      );\n\n      // Then draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n      // Then check if we got some score if collided\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n\n    // Here are the updates\n    setStage(prev => updateStage(prev));\n  }, [\n    player.collided,\n    player.pos.x,\n    player.pos.y,\n    player.tetromino,\n    resetPlayer,\n  ]);\n\n  return [stage, setStage, rowsCleared];\n};","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  aspect-ratio: 1;\n  background: ${props => props.type === 0 ? 'rgba(0, 0, 0, 0.1)' : `rgba(${props.color}, 0.85)`};\n  border: ${props => props.type === 0 ? '1px solid rgba(255, 255, 255, 0.05)' : '1px solid'};\n  border-bottom-color: ${props => props.type === 0 ? 'rgba(255, 255, 255, 0.05)' : `rgba(${props.color}, 0.1)`};\n  border-right-color: ${props => props.type === 0 ? 'rgba(255, 255, 255, 0.05)' : `rgba(${props.color}, 0.9)`};\n  border-top-color: ${props => props.type === 0 ? 'rgba(255, 255, 255, 0.05)' : `rgba(${props.color}, 0.9)`};\n  border-left-color: ${props => props.type === 0 ? 'rgba(255, 255, 255, 0.05)' : `rgba(${props.color}, 0.3)`};\n  box-shadow: ${props => props.type === 0 ? 'none' : 'inset 0 0 4px rgba(0, 0, 0, 0.2)'};\n  transition: all 0.15s ease;\n  position: relative;\n  overflow: hidden;\n  margin: 0.5px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.type === 0 ? 'none' : 'linear-gradient(135deg, rgba(255, 255, 255, 0.15) 0%, transparent 50%)'};\n    pointer-events: none;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.type === 0 ? 'none' : 'linear-gradient(45deg, transparent 0%, rgba(0, 0, 0, 0.1) 100%)'};\n    pointer-events: none;\n  }\n\n  &:hover {\n    transform: ${props => props.type === 0 ? 'none' : 'scale(1.02)'};\n    z-index: 1;\n  }\n`;","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type, index }) => {\n  return (\n    <StyledCell \n      type={type} \n      color={TETROMINOS[type].color}\n      data-testid=\"cell\"\n      key={`cell-${index}`}\n    />\n  );\n};\n\nexport default React.memo(Cell, (prevProps, nextProps) => {\n  return prevProps.type === nextProps.type;\n});","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(20vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  width: 100%;\n  max-width: 20vw;\n  background: rgba(0, 0, 0, 0.3);\n  padding: 8px;\n  box-shadow: \n    0 8px 32px 0 rgba(31, 38, 135, 0.37),\n    inset 0 0 20px rgba(0, 0, 0, 0.2);\n  position: relative;\n  overflow: hidden;\n  backdrop-filter: blur(8px);\n  transition: all 0.3s ease;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0.05) 0%,\n      transparent 50%,\n      rgba(0, 0, 0, 0.1) 100%\n    );\n    pointer-events: none;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 10px;\n    pointer-events: none;\n  }\n\n  /* Grid lines effect */\n  background-image: \n    linear-gradient(rgba(255, 255, 255, 0.05) 1px, transparent 1px),\n    linear-gradient(90deg, rgba(255, 255, 255, 0.05) 1px, transparent 1px);\n  background-size: calc(100% / ${props => props.width}) calc(100% / ${props => props.height});\n\n  @media (max-width: 850px) {\n    max-width: 30vw;\n    padding: 6px;\n  }\n\n  @media (max-width: 600px) {\n    max-width: 40vw;\n    padding: 5px;\n  }\n\n  @media (max-height: 700px) {\n    padding: 5px;\n  }\n\n  /* Animation for new pieces */\n  @keyframes pieceDrop {\n    0% {\n      transform: translateY(-10px);\n      opacity: 0;\n    }\n    100% {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }\n\n  /* Animation for cleared lines */\n  @keyframes lineClear {\n    0% {\n      background: rgba(255, 255, 255, 0.3);\n    }\n    50% {\n      background: rgba(255, 255, 255, 0.5);\n    }\n    100% {\n      background: transparent;\n    }\n  }\n`;","import React from 'react';\n\nimport Cell from './Cell';\nimport { StyledStage } from './styles/StyledStage';\n\nconst Stage = ({ stage }) => {\n    return (\n        <StyledStage width={stage[0].length} height={stage.length}>\n            {stage.map((row, y) => \n                row.map((cell, x) => (\n                    <Cell \n                        key={`${y}-${x}`}\n                        type={cell[0]}\n                        index={`${y}-${x}`}\n                    />\n                ))\n            )}\n        </StyledStage>\n    );\n};\n\nexport default React.memo(Stage);","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 0 0 15px 0;\n  padding: 12px 20px;\n  min-height: 40px;\n  width: 100%;\n  border-radius: 10px;\n  color: ${props => (props.gameOver ? '#ff6b6b' : '#fff')};\n  background: rgba(0, 0, 0, 0.4);\n  font-family: 'Pixel', Arial, Helvetica, sans-serif;\n  font-size: 0.9rem;\n  border: 2px solid rgba(255, 255, 255, 0.1);\n  box-shadow: \n    0 4px 6px rgba(0, 0, 0, 0.1),\n    inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s ease;\n  backdrop-filter: blur(4px);\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0.05) 0%,\n      transparent 50%,\n      rgba(0, 0, 0, 0.1) 100%\n    );\n    pointer-events: none;\n  }\n\n  .label {\n    font-weight: bold;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    color: rgba(255, 255, 255, 0.7);\n    font-size: 0.85rem;\n    padding-right: 10px;\n    position: relative;\n    \n    &::after {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 50%;\n      transform: translateY(-50%);\n      width: 1px;\n      height: 70%;\n      background: rgba(255, 255, 255, 0.1);\n    }\n  }\n\n  .value {\n    font-weight: bold;\n    color: ${props => (props.gameOver ? '#ff6b6b' : '#fff')};\n    text-shadow: 0 0 10px ${props => (props.gameOver ? 'rgba(255, 107, 107, 0.5)' : 'rgba(255, 255, 255, 0.3)')};\n    font-size: 1rem;\n    padding-left: 10px;\n    min-width: 60px;\n    text-align: right;\n  }\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: \n      0 6px 12px rgba(0, 0, 0, 0.15),\n      inset 0 1px 0 rgba(255, 255, 255, 0.1);\n    background: rgba(0, 0, 0, 0.5);\n  }\n\n  @media (max-width: 850px) {\n    padding: 10px 15px;\n    min-height: 35px;\n    font-size: 0.8rem;\n    \n    .label {\n      font-size: 0.75rem;\n    }\n    \n    .value {\n      font-size: 0.9rem;\n    }\n  }\n\n  @media (max-height: 700px) {\n    padding: 8px 12px;\n    min-height: 30px;\n    margin-bottom: 10px;\n    \n    .label {\n      font-size: 0.7rem;\n    }\n    \n    .value {\n      font-size: 0.85rem;\n    }\n  }\n`;","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => {\n    // Split the text into label and value\n    const [label, value] = text.split(':').map(str => str.trim());\n    \n    return (\n        <StyledDisplay gameOver={gameOver}>\n            <span className=\"label\">{label}</span>\n            <span className=\"value\">{value || text}</span>\n        </StyledDisplay>\n    );\n};\n\nexport default React.memo(Display);","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 15px 30px;\n  min-height: 50px;\n  width: 100%;\n  border-radius: 12px;\n  border: none;\n  color: #fff;\n  background: linear-gradient(135deg, #0f3460 0%, #16213e 100%);\n  font-family: 'Pixel', Arial, Helvetica, sans-serif;\n  font-size: 1.2rem;\n  font-weight: bold;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  outline: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n  position: relative;\n  overflow: hidden;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);\n    background: linear-gradient(135deg, #16213e 0%, #0f3460 100%);\n  }\n\n  &:active {\n    transform: translateY(1px);\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);\n    transform: translateX(-100%);\n    transition: transform 0.6s ease;\n  }\n\n  &:hover::after {\n    transform: translateX(100%);\n  }\n`;","import React from 'react';\nimport {StyledStartButton} from './styles/StyledStartButton';\nconst StartButton=({callback})=>{\n    return(\n    <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n    )\n}\nexport default StartButton;","import styled from 'styled-components';\n\nexport const StyledFooter = styled.footer`\n  width: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  backdrop-filter: blur(10px);\n  padding: 10px 0;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.2);\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nexport const FooterContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n\n  @media (max-width: 850px) {\n    padding: 0 15px;\n    gap: 15px;\n  }\n\n  @media (max-width: 600px) {\n    padding: 0 10px;\n    gap: 10px;\n  }\n`;\n\nexport const FooterSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n\n  @media (max-width: 850px) {\n    gap: 12px;\n  }\n\n  @media (max-width: 600px) {\n    gap: 10px;\n  }\n`;\n\nexport const FooterText = styled.p`\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 0.9rem;\n  margin: 0;\n\n  @media (max-width: 850px) {\n    font-size: 0.85rem;\n  }\n\n  @media (max-width: 600px) {\n    font-size: 0.8rem;\n  }\n`;\n\nexport const FooterLinks = styled.div`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n\n  @media (max-width: 850px) {\n    gap: 12px;\n  }\n\n  @media (max-width: 600px) {\n    gap: 10px;\n  }\n`;\n\nexport const FooterLink = styled.a`\n  color: rgba(255, 255, 255, 0.8);\n  text-decoration: none;\n  font-size: 0.9rem;\n  padding: 4px 10px;\n  border-radius: 6px;\n  transition: all 0.2s ease;\n  border: 1px solid transparent;\n\n  &:hover {\n    color: #fff;\n    background: rgba(255, 255, 255, 0.1);\n    border-color: rgba(255, 255, 255, 0.2);\n    transform: translateY(-1px);\n  }\n\n  @media (max-width: 850px) {\n    font-size: 0.85rem;\n    padding: 3px 8px;\n  }\n\n  @media (max-width: 600px) {\n    font-size: 0.8rem;\n    padding: 2px 6px;\n  }\n`;\n\nexport const TechStack = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  @media (max-width: 850px) {\n    gap: 8px;\n  }\n\n  @media (max-width: 600px) {\n    gap: 6px;\n  }\n`;\n\nexport const TechIcon = styled.span`\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 1rem;\n  transition: all 0.2s ease;\n\n  &:hover {\n    color: #fff;\n    transform: translateY(-1px);\n  }\n\n  @media (max-width: 850px) {\n    font-size: 0.9rem;\n  }\n\n  @media (max-width: 600px) {\n    font-size: 0.8rem;\n  }\n`; ","import React from 'react';\nimport {\n  StyledFooter,\n  FooterContent,\n  FooterText,\n  FooterLinks,\n  FooterLink,\n  TechStack\n} from './styles/StyledFooter';\n\nconst Footer = () => {\n  return (\n    <StyledFooter>\n      <FooterContent>\n        <FooterText>\n          Developed by <span>Vivek Chaurasia</span>\n        </FooterText>\n        \n        <TechStack>\n          <i className=\"fab fa-react\" title=\"React\"></i>\n          <i className=\"fab fa-js\" title=\"JavaScript\"></i>\n          <i className=\"fab fa-css3-alt\" title=\"CSS3\"></i>\n          <span>React Hooks & Styled Components</span>\n        </TechStack>\n\n        <FooterLinks>\n          <FooterLink href=\"https://github.com/Vivekch05\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-github\"></i>\n            GitHub\n          </FooterLink>\n          <FooterLink href=\"https://www.linkedin.com/in/vivekch123/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-linkedin\"></i>\n            LinkedIn\n          </FooterLink>\n        </FooterLinks>\n      </FooterContent>\n    </StyledFooter>\n  );\n};\n\nexport default Footer;","import styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\n  width: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  backdrop-filter: blur(10px);\n  padding: 10px 0;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nexport const HeaderContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n\n  @media (max-width: 850px) {\n    padding: 0 15px;\n    gap: 15px;\n  }\n\n  @media (max-width: 600px) {\n    padding: 0 10px;\n    gap: 10px;\n  }\n`;\n\nexport const Logo = styled.h1`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #fff;\n  margin: 0;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  letter-spacing: 0.5px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  @media (max-width: 850px) {\n    font-size: 1.3rem;\n  }\n\n  @media (max-width: 600px) {\n    font-size: 1.1rem;\n  }\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n\n  @media (max-width: 850px) {\n    gap: 12px;\n  }\n\n  @media (max-width: 600px) {\n    gap: 10px;\n  }\n`;\n\nexport const NavLink = styled.a`\n  color: rgba(255, 255, 255, 0.8);\n  text-decoration: none;\n  font-size: 0.9rem;\n  padding: 4px 10px;\n  border-radius: 6px;\n  transition: all 0.2s ease;\n  border: 1px solid transparent;\n\n  &:hover {\n    color: #fff;\n    background: rgba(255, 255, 255, 0.1);\n    border-color: rgba(255, 255, 255, 0.2);\n    transform: translateY(-1px);\n  }\n\n  @media (max-width: 850px) {\n    font-size: 0.85rem;\n    padding: 3px 8px;\n  }\n\n  @media (max-width: 600px) {\n    font-size: 0.8rem;\n    padding: 2px 6px;\n  }\n`;\n\nexport const GameInfo = styled.div`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n\n  @media (max-width: 850px) {\n    gap: 12px;\n  }\n\n  @media (max-width: 600px) {\n    gap: 10px;\n  }\n`;\n\nexport const InfoItem = styled.div`\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 0.9rem;\n  padding: 4px 10px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 6px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  transition: all 0.2s ease;\n  \n  span {\n    color: #fff;\n    font-weight: 600;\n  }\n\n  @media (max-width: 850px) {\n    font-size: 0.85rem;\n    padding: 3px 8px;\n  }\n\n  @media (max-width: 600px) {\n    font-size: 0.8rem;\n    padding: 2px 6px;\n  }\n`; ","import React from 'react';\nimport {\n  StyledHeader,\n  HeaderContent,\n  Logo,\n  GameInfo,\n  InfoItem\n} from './styles/StyledHeader';\n\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <HeaderContent>\n        <Logo>\n          TETRIS<span> GAME</span>\n        </Logo>\n        <GameInfo>\n          <InfoItem>\n            Level: <span>1</span>\n          </InfoItem>\n          <InfoItem>\n            Score: <span>0</span>\n          </InfoItem>\n          <InfoItem>\n            Lines: <span>0</span>\n          </InfoItem>\n        </GameInfo>\n      </HeaderContent>\n    </StyledHeader>\n  );\n};\n\nexport default Header;","import React, { useState, useCallback, useEffect } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelper';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [highScore, setHighScore] = useState(() => {\n    const saved = localStorage.getItem('tetrisHighScore');\n    return saved ? parseInt(saved) : 0;\n  });\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\n  // Save high score\n  useEffect(() => {\n    if (score > highScore) {\n      setHighScore(score);\n      localStorage.setItem('tetrisHighScore', score.toString());\n    }\n  }, [score, highScore]);\n\n  const movePlayer = useCallback(dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  }, [player, stage, updatePlayerPos]);\n\n  const keyUp = useCallback(({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1));\n      }\n    }\n  }, [gameOver, level]);\n\n  const startGame = useCallback(() => {\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setScore(0);\n    setLevel(0);\n    setRows(0);\n    setGameOver(false);\n    setIsPaused(false);\n  }, [resetPlayer, setScore, setLevel, setRows, setStage]);\n\n  const drop = useCallback(() => {\n    if (isPaused) return;\n\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      if (player.pos.y < 1) {\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  }, [isPaused, level, player, rows, setLevel, setStage, stage, updatePlayerPos]);\n\n  const dropPlayer = useCallback(() => {\n    setDropTime(null);\n    drop();\n  }, [drop]);\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  const move = useCallback(({ keyCode }) => {\n    if (!gameOver && !isPaused) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      } else if (keyCode === 80) { // 'P' key for pause\n        setIsPaused(prev => !prev);\n      }\n    }\n  }, [gameOver, isPaused, movePlayer, dropPlayer, playerRotate, stage]);\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={move}\n      onKeyUp={keyUp}\n    >\n      <Header />  \n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`High Score: ${highScore}`} />\n              <Display text={`Rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n              {isPaused && <Display text=\"Paused\" />}\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n      <Footer />\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default React.memo(Tetris);","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelper';\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  function rotate(matrix, dir) {\n    // Make the rows to become cols (transpose)\n    const mtrx = matrix.map((_, index) => matrix.map(column => column[index]));\n    // Reverse each row to get a rotaded matrix\n    if (dir > 0) return mtrx.map(row => row.reverse());\n    return mtrx.reverse();\n  }\n\n  function playerRotate(stage, dir) {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  }\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided,\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};","import {useState, useEffect, useCallback} from 'react';\n\nexport const useGameStatus = rowsCleared =>{\n    const [score,setScore]=useState(0);\n    const [rows,setRows]=useState(0);\n    const [level,setLevel]=useState(0);\n\n    const linePoints=[40,100,300,1200];\n\n    const clacScore =useCallback(()=>{\n        //we have score\n        if(rowsCleared>0){\n            //this is how original tetris score is calculated\n            setScore(prev =>prev + linePoints[rowsCleared -1]*(level+1));\n            setRows(prev=> prev+rowsCleared);\n\n        }\n    },[level,linePoints,rowsCleared]);\n\n    useEffect(()=>{\n        clacScore();\n    },[clacScore,rowsCleared,score]);\n    return[score,setScore,rows,setRows,level,setLevel];\n};","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}","import React from 'react';\nimport './App.css';\nimport Tetris from './components/Tetris';\n\nconst App=()=>{\n  return (\n    <div className=\"App\" data-testid=\"tetris-game\"> \n      <Tetris/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}